<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ddw.dd.manage.dao.UserinfoMapper" >
  <resultMap id="BaseResultMap" type="com.ddw.dd.manage.pojo.po.Userinfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="birth" property="birth" jdbcType="DATE" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="mail" property="mail" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="rank" property="rank" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, sex, birth, idcard, mail, phone, rank
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from userinfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from userinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ddw.dd.manage.pojo.po.Userinfo" >
    insert into userinfo (id, user_id, sex, 
      birth, idcard, mail, phone, 
      rank)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{sex,jdbcType=INTEGER}, 
      #{birth,jdbcType=DATE}, #{idcard,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{rank,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ddw.dd.manage.pojo.po.Userinfo" >
    insert into userinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birth != null" >
        birth,
      </if>
      <if test="idcard != null" >
        idcard,
      </if>
      <if test="mail != null" >
        mail,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="rank != null" >
        rank,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="birth != null" >
        #{birth,jdbcType=DATE},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="mail != null" >
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="rank != null" >
        #{rank,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ddw.dd.manage.pojo.po.Userinfo" >
    update userinfo
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="birth != null" >
        birth = #{birth,jdbcType=DATE},
      </if>
      <if test="idcard != null" >
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="mail != null" >
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="rank != null" >
        rank = #{rank,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ddw.dd.manage.pojo.po.Userinfo" >
    update userinfo
    set user_id = #{userId,jdbcType=INTEGER},
      sex = #{sex,jdbcType=INTEGER},
      birth = #{birth,jdbcType=DATE},
      idcard = #{idcard,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      rank = #{rank,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>